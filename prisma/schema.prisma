// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}



model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String   @db.Text
  excerpt     String?
  status      PostStatus @default(DRAFT)
  password    String?
  publishDate DateTime?
  coverImage  String?
  altText     String?
  wordCount   Int      @default(0)
  readingTime Int      @default(0)
  publishedAt DateTime? 

  
  
  // Relations
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  categories    Category[] 
  tags     Tag[]  
  
  // SEO
  metaTitle       String?
  metaDescription String?
  focusKeyword    String?


  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([status])
  @@index([slug])
  @@index([authorId])
}

model Category {
  id       String   @id @default(cuid())
  name     String   @unique
  slug     String   @unique
  posts    Post[]   

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[] // simplified many-to-many backref
}

enum PostStatus {
  DRAFT
  PUBLISHED
  SCHEDULED
}


model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?    // Optional
  service   String?    // Optional (e.g., solar-installation)
  subject   String?    // Optional (can be blank)
  message   String
  createdAt DateTime @default(now())
}



